// Generated by CoffeeScript 1.9.1
'use strict';
var copyFile, debug, fs, ignored, ignoredAlways, mkdirp, sysPath;

debug = require('debug')('brunch:common');

copyFile = require('quickly-copy-file');

fs = require('fs');

mkdirp = require('mkdirp');

sysPath = require('path');

exports.exists = fs.access ? function(path, callback) {
  return fs.access(path, function(error) {
    return callback(!error);
  });
} : fs.exists || sysPath.exists;

exports.writeFile = function(path, data, callback) {
  var write;
  debug("Writing file '" + path + "'");
  write = function(callback) {
    return fs.writeFile(path, data, callback);
  };
  return write(function(error) {
    if (error == null) {
      return callback(null, path, data);
    }
    return mkdirp(sysPath.dirname(path), 0x1ed, function(error) {
      if (error != null) {
        return callback(error);
      }
      return write(function(error) {
        return callback(error, path, data);
      });
    });
  });
};

exports.ignored = ignored = (function() {
  var re1, re2;
  re1 = /\.(?!htaccess|rewrite)/;
  re2 = /(^[.#]|(?:__|~)$)/;
  return function(path) {
    var base;
    base = sysPath.basename(path);
    return re1.test(base) && re2.test(base);
  };
})();

exports.ignoredAlways = ignoredAlways = function(path) {
  return /^\.(git|hg)$/.test(sysPath.basename(path));
};

exports.copy = function(source, destination, callback) {
  if (ignored(source)) {
    return callback();
  }
  return copyFile(source, destination, callback);
};
